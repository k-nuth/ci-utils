on:
  workflow_call:
    inputs:
      if:
        description: 'Whether to run this job'
        required: false
        type: boolean
      os:
        required: true
        type: string
      image:
        required: true
        type: string
      conan-remote:
        required: true
        type: string
      build-version:
        required: true
        type: string
    secrets:
      conan-user:
        required: true
      conan-password:
        required: true
    outputs:
      matrix:
        description: "Matrix"
        value: ${{ jobs.reusable-calc-deps-with-container.outputs.matrix }}
jobs:
  reusable-calc-deps-with-container:
    if: ${{ inputs.if }}
    runs-on: ${{ inputs.os }}
    container:
      image: ${{ inputs.image }}
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: actions/cache@v4
        with:
          path: ~/.conan/data
          key: alpine-${{ hashFiles('**/conan.lock') }}


      # - if: ${{ inputs.compiler != 'GCC' }}
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: '3.11'

      - uses: ./ci_utils/.github/actions/setup-conan
      - uses: ./ci_utils/.github/actions/setup-kthbuild
      - name: conan login
        run: conan remote login -p ${{ secrets.conan-password }} ${{ inputs.conan-remote }} ${{ secrets.conan-user }}

      - name: build order
        working-directory: .
        run: |
          conan lock create conanfile.py --version ${{ inputs.build-version }} --lockfile=conan.lock --lockfile-out=build/conan.lock -pr linux-ci-cd -s build_type=Release
          # conan lock build-order build/conan.lock --json=build_order.json
          # conan graph build-order conanfile.py --lockfile=build/conan.lock -f json > build_order.json

          # Conan 2.7 build order recipe
          conan graph build-order conanfile.py --lockfile=build/conan.lock -f json --order-by recipe --build=missing --reduce > build_order.json
          # Conan 2.7 build order configuration
          # conan graph build-order conanfile.py --lockfile=build/conan.lock -f json --order-by configuration --build=missing --reduce > build_order.json

      - uses: actions/upload-artifact@v4
        with:
          name: conan-lockfile-container
          path: build/conan.lock
      - id: set-matrix
        name: output
        run: |
          cp ./ci_utils/.github/matrix.json platform.json
          cat platform.json
          echo $(cat build_order.json)
          # cd backend
          cat build_order.json
          python3 ./ci_utils/build-order-to-matrix.py
          MATRIX=$(cat matrix.json)
          echo "${MATRIX}"
          echo "matrix=${MATRIX}" >> $GITHUB_OUTPUT
