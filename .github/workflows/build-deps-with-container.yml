on:
  workflow_call:
    inputs:
      if:
        description: 'Whether to run this job'
        required: false
        type: boolean
      os:
        required: true
        type: string
      image:
        required: true
        type: string
      reference:
        required: true
        type: string
      conan-remote:
        required: true
        type: string
    secrets:
      conan-user:
        required: true
      conan-password:
        required: true
jobs:
  reusable-build-deps-with-container:
    if: ${{ inputs.if }}
    runs-on: ${{ inputs.os }}
    container:
      image: ${{ inputs.image }}
    steps:
      - run: |
          echo "inputs.conan-remote: ${{ inputs.conan-remote }}"
          echo "CONAN_REMOTE: $CONAN_REMOTE"
          echo "inputs.if: ${{ inputs.if }}"
          echo "inputs.os: ${{ inputs.os }}"
          echo "inputs.image: ${{ inputs.image }}"
          echo "inputs.reference: ${{ inputs.reference }}"


      - uses: actions/checkout@v4
        with:
          submodules: true

      # - if: ${{ inputs.reference != 'null' && inputs.compiler != 'GCC' }}
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: '3.11'
      - if: ${{ inputs.reference != 'null' }}
        uses: ./ci_utils/.github/actions/setup-conan
      - if: ${{ inputs.reference != 'null' }}
        uses: ./ci_utils/.github/actions/setup-kthbuild
      - if: ${{ inputs.reference != 'null' }}
        run: conan remote login -p ${{ secrets.conan-password }} ${{ inputs.conan-remote }} ${{ secrets.conan-user }}
      - name: download
        if: ${{ inputs.reference != 'null' }}
        uses: actions/download-artifact@v3
        with:
          name: conan-lockfile-container
      - name: build
        if: ${{ inputs.reference != 'null' }}
        run: conan install --requires=${{ inputs.reference }} -l conan.lock -b missing -pr:b linux-ci-cd -pr:h linux-ci-cd
      - name: upload
        if: ${{ inputs.reference != 'null' }}
        run: conan upload ${{ inputs.reference }} -r ${{ inputs.conan-remote }} # --all
      - run: exit 0
